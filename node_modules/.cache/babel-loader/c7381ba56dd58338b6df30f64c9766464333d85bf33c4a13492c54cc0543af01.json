{"ast":null,"code":"import _slicedToArray from\"/home/jeevan/FrontEnd/React/JKTextUtils/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from\"react\";import\"./App.css\";import About from\"./Components/About\";import Alert from\"./Components/Alert\";import Navbar from\"./Components/Navbar\";import TextForm from\"./Components/TextForm\";import{BrowserRouter as Router,Routes,Route}from\"react-router-dom\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var _useState=useState(\"light\"),_useState2=_slicedToArray(_useState,2),mode=_useState2[0],setMode=_useState2[1];//for dark and light mode\nvar _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),alert=_useState4[0],setalert=_useState4[1];// for showing alerts when a textutil button is pressed \nvar showAlert=function showAlert(message,type){setalert({msg:message,type:type});setTimeout(function(){setalert(null);},1000);};var togglemodeHandler=function togglemodeHandler(){if(mode===\"light\"){setMode(\"dark\");document.body.style.backgroundColor=\"rgb(14 36 59)\";document.body.style.color=\"white\";showAlert(\"Dark Mode has been enabled successfully\",\"success\");// document.title = \"JK TextUtils(Dark Mode)\";\n}else{setMode(\"light\");document.body.style.backgroundColor='white';document.body.style.color=\"black\";showAlert(\"Light Mode has been enabled successfully\",\"success\");// document.title = \"JK TextUtils(Light Mode)\";\n}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(Navbar,{title:\"Textutils\",home:\"Home\",about:\"About TextUtils\",togglemode:togglemodeHandler,mode:mode}),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsx(\"div\",{className:\"container my-3\",children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/about\",element:/*#__PURE__*/_jsx(About,{mode:mode})}),/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(TextForm,{heading:\"Enter the text to analyze\",mode:mode,showAlert:showAlert})})]})})]})});};export default App;","map":{"version":3,"names":["useState","About","Alert","Navbar","TextForm","BrowserRouter","Router","Routes","Route","App","mode","setMode","alert","setalert","showAlert","message","type","msg","setTimeout","togglemodeHandler","document","body","style","backgroundColor","color"],"sources":["/home/jeevan/FrontEnd/React/JKTextUtils/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\nimport About from \"./Components/About\";\nimport Alert from \"./Components/Alert\";\nimport Navbar from \"./Components/Navbar\";\nimport TextForm from \"./Components/TextForm\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\n\nconst App = () => {\n\n  const [mode, setMode] = useState(\"light\")//for dark and light mode\n\n  const [alert, setalert] = useState(null) // for showing alerts when a textutil button is pressed \n\n  const showAlert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type\n    })\n\n    setTimeout(() => {\n      setalert(null)\n    }, 1000)\n  }\n  const togglemodeHandler = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"rgb(14 36 59)\";\n      document.body.style.color = \"white\";\n      showAlert(\"Dark Mode has been enabled successfully\", \"success\")\n      // document.title = \"JK TextUtils(Dark Mode)\";\n    }\n    else {\n\n      setMode(\"light\");\n      document.body.style.backgroundColor = 'white';\n      document.body.style.color = \"black\";\n      showAlert(\"Light Mode has been enabled successfully\", \"success\")\n      // document.title = \"JK TextUtils(Light Mode)\";\n\n    }\n  }\n  return (\n    <>\n      <Router>\n      <Navbar title=\"Textutils\" home=\"Home\" about=\"About TextUtils\" togglemode={togglemodeHandler} mode={mode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        <Routes>\n\n            <Route path=\"/about\" element={<About mode={mode}/>}/>\n            <Route path=\"/\" element={<TextForm heading=\"Enter the text to analyze\" mode={mode} showAlert={showAlert}/>} />\n            \n            \n          </Routes>\n      </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"6HAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,MAAO,WAAW,CAClB,MAAOC,MAAK,KAAM,oBAAoB,CACtC,MAAOC,MAAK,KAAM,oBAAoB,CACtC,MAAOC,OAAM,KAAM,qBAAqB,CACxC,MAAOC,SAAQ,KAAM,uBAAuB,CAC5C,OACEC,aAAa,GAAIC,OAAM,CACvBC,MAAM,CACNC,KAAK,KACA,kBAAkB,CAAC,6IAE1B,GAAMC,IAAG,CAAG,QAANA,IAAG,EAAS,CAEhB,cAAwBT,QAAQ,CAAC,OAAO,CAAC,wCAAlCU,IAAI,eAAEC,OAAO,eAAqB;AAEzC,eAA0BX,QAAQ,CAAC,IAAI,CAAC,yCAAjCY,KAAK,eAAEC,QAAQ,eAAmB;AAEzC,GAAMC,UAAS,CAAG,QAAZA,UAAS,CAAIC,OAAO,CAAEC,IAAI,CAAK,CACnCH,QAAQ,CAAC,CACPI,GAAG,CAAEF,OAAO,CACZC,IAAI,CAAEA,IACR,CAAC,CAAC,CAEFE,UAAU,CAAC,UAAM,CACfL,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CACD,GAAMM,kBAAiB,CAAG,QAApBA,kBAAiB,EAAS,CAC9B,GAAIT,IAAI,GAAK,OAAO,CAAE,CACpBC,OAAO,CAAC,MAAM,CAAC,CACfS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,eAAe,CACrDH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,KAAK,CAAG,OAAO,CACnCV,SAAS,CAAC,yCAAyC,CAAE,SAAS,CAAC,CAC/D;AACF,CAAC,IACI,CAEHH,OAAO,CAAC,OAAO,CAAC,CAChBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,OAAO,CAC7CH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,KAAK,CAAG,OAAO,CACnCV,SAAS,CAAC,0CAA0C,CAAE,SAAS,CAAC,CAChE;AAEF,CACF,CAAC,CACD,mBACE,sCACE,MAAC,MAAM,yBACP,KAAC,MAAM,EAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC,UAAU,CAAEK,iBAAkB,CAAC,IAAI,CAAET,IAAK,EAAG,cAC3G,KAAC,KAAK,EAAC,KAAK,CAAEE,KAAM,EAAG,cACvB,YAAK,SAAS,CAAC,gBAAgB,uBAC7B,MAAC,MAAM,yBAEH,KAAC,KAAK,EAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,cAAE,KAAC,KAAK,EAAC,IAAI,CAAEF,IAAK,EAAG,EAAE,cACrD,KAAC,KAAK,EAAC,IAAI,CAAC,GAAG,CAAC,OAAO,cAAE,KAAC,QAAQ,EAAC,OAAO,CAAC,2BAA2B,CAAC,IAAI,CAAEA,IAAK,CAAC,SAAS,CAAEI,SAAU,EAAG,EAAG,GAGvG,EACP,GACG,EACR,CAEP,CAAC,CAED,cAAeL,IAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}