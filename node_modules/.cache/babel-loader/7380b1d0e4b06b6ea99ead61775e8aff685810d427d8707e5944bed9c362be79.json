{"ast":null,"code":"import _slicedToArray from\"/home/jeevan/FrontEnd/React/JKTextUtils/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";//to change the value of text as entered by the user\nimport{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function TextForm(props){var OnChangeHandler=function OnChangeHandler(event){setText(event.target.value);};//to convert text to upper case\nvar UppercaseHandler=function UppercaseHandler(){var newText=text.toUpperCase();setText(newText);props.showAlert(\"Converted to Upper Case\",\"success\");};//to convert text to lower case\nvar LowercaseHandler=function LowercaseHandler(){var newText=text.toLowerCase();setText(newText);props.showAlert(\"Converted to Lower Case\",\"success\");};//to clear the text area\nvar ClearTextHandler=function ClearTextHandler(){var newText=\"\";setText(newText);props.showAlert(\"Text area cleared\",\"success\");};// The navigator.clipboard object is a web API that provides access to the clipboard. The writeText() method allows you to write a string of text to the clipboard, replacing any existing data that was previously stored there.\n//  It takes a single argument, which is the text that you want to write to the clipboard.\n// to copy \nvar handleCopy=function handleCopy(){var text=document.getElementById(\"myBox\");text.select();//actually this is not needed but just for visual appearence we included it\nnavigator.clipboard.writeText(text.value);// main line which actullay write the text to clipboard[this is equal to ctrl+c]\nprops.showAlert(\"Text copied to clipboard\",\"success\");};// to remove extra spaces\n//   [ ]: Matches a single space character.\n// +: Specifies that the preceding character (in this case, a space) should be matched one or more times.\nvar handleExtraSpaces=function handleExtraSpaces(){var newText=text.split(/[ ]+/);//regex which splits text with delimiter 'one or more spaces'\nsetText(newText.join(\" \"));//joins all items in array(words) with space\nprops.showAlert(\"Extra spaces has been removed\",\"success\");};var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:props.heading}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-3\",children:/*#__PURE__*/_jsx(\"textarea\",{className:\"form-control\",value:text,onChange:OnChangeHandler,id:\"myBox\",rows:\"8\",style:{backgroundColor:props.mode==='dark'?'rgb(27, 26, 26)':'white',color:props.mode==='dark'?'white':'black'}})}),/*#__PURE__*/_jsx(\"button\",{disabled:text.length===0,className:\"btn btn-primary me-2 mb-2\",onClick:UppercaseHandler,children:\"Convert to Uppercase\"}),/*#__PURE__*/_jsx(\"button\",{disabled:text.length===0,className:\"btn btn-primary me-2 mb-2\",onClick:LowercaseHandler,children:\"Convert to Lowercase\"}),/*#__PURE__*/_jsx(\"button\",{disabled:text.length===0,className:\"btn btn-primary me-2 mb-2\",onClick:ClearTextHandler,children:\"Clear Text\"}),/*#__PURE__*/_jsx(\"button\",{disabled:text.length===0,className:\"btn btn-primary me-2 mb-2\",onClick:handleCopy,children:\"Copy Text\"}),/*#__PURE__*/_jsx(\"button\",{disabled:text.length===0,className:\"btn btn-primary me-2 mb-2\",onClick:handleExtraSpaces,children:\"Remove extra spaces\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"container my-3\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\" Your Text Summary\"}),/*#__PURE__*/_jsxs(\"b\",{children:[\" \",text.split(/\\s+/).filter(function(element){return element.length!==0;}).length,\" words and \",text.length,\" characters\"]}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsxs(\"b\",{children:[\"You will take \",text.split(\" \").filter(function(element){return element.length!==0;}).length*0.008,\"minutes to read the above text\"]})}),/*#__PURE__*/_jsx(\"h2\",{children:\"Preview\"}),/*#__PURE__*/_jsx(\"p\",{children:text.length>0?text:\"Enter something in the above textbox to preview it here\"})]})]});}","map":{"version":3,"names":["React","useState","TextForm","props","OnChangeHandler","event","setText","target","value","UppercaseHandler","newText","text","toUpperCase","showAlert","LowercaseHandler","toLowerCase","ClearTextHandler","handleCopy","document","getElementById","select","navigator","clipboard","writeText","handleExtraSpaces","split","join","heading","backgroundColor","mode","color","length","filter","element"],"sources":["/home/jeevan/FrontEnd/React/JKTextUtils/src/Components/TextForm.js"],"sourcesContent":["import React, { useState } from \"react\";\n\n//to change the value of text as entered by the user\nexport default function TextForm(props) {\n  const OnChangeHandler = (event) => {\n    setText(event.target.value);\n  };\n\n  //to convert text to upper case\n  const UppercaseHandler = () => {\n    let newText = text.toUpperCase();\n    setText(newText);\n    props.showAlert(\"Converted to Upper Case\", \"success\")\n  };\n\n  //to convert text to lower case\n  const LowercaseHandler = () => {\n    let newText = text.toLowerCase();\n    setText(newText);\n    props.showAlert(\"Converted to Lower Case\", \"success\")\n  };\n\n  //to clear the text area\n  const ClearTextHandler = () => {\n    let newText = \"\";\n    setText(newText);\n    props.showAlert(\"Text area cleared\", \"success\")\n  };\n\n  // The navigator.clipboard object is a web API that provides access to the clipboard. The writeText() method allows you to write a string of text to the clipboard, replacing any existing data that was previously stored there.\n\n  //  It takes a single argument, which is the text that you want to write to the clipboard.\n\n\n  // to copy \n  const handleCopy = () => {\n    var text = document.getElementById(\"myBox\");\n    text.select();//actually this is not needed but just for visual appearence we included it\n    navigator.clipboard.writeText(text.value);// main line which actullay write the text to clipboard[this is equal to ctrl+c]\n    props.showAlert(\"Text copied to clipboard\", \"success\")\n  }\n\n  // to remove extra spaces\n  //   [ ]: Matches a single space character.\n  // +: Specifies that the preceding character (in this case, a space) should be matched one or more times.\n  const handleExtraSpaces = () => {\n    let newText = text.split(/[ ]+/); //regex which splits text with delimiter 'one or more spaces'\n    setText(newText.join(\" \"))//joins all items in array(words) with space\n    props.showAlert(\"Extra spaces has been removed\", \"success\")\n  }\n\n  let [text, setText] = useState(\"\");\n\n  return (\n    <>\n      <div className=\"container\">\n        <h1>{props.heading}</h1>\n\n        <div className=\"mb-3\">\n          <textarea className=\"form-control\" value={text} onChange={OnChangeHandler} id=\"myBox\" rows=\"8\"\n            style={{ backgroundColor: props.mode === 'dark' ? 'rgb(27, 26, 26)' : 'white', color: props.mode === 'dark' ? 'white' : 'black' }}\n          ></textarea>\n        </div>\n\n        <button disabled={text.length===0}  className=\"btn btn-primary me-2 mb-2\" onClick={UppercaseHandler}>\n          Convert to Uppercase\n        </button>\n        <button disabled={text.length===0} className=\"btn btn-primary me-2 mb-2\" onClick={LowercaseHandler}>\n          Convert to Lowercase\n        </button>\n        <button disabled={text.length===0} className=\"btn btn-primary me-2 mb-2\" onClick={ClearTextHandler}>\n          Clear Text\n        </button>\n        <button disabled={text.length===0} className=\"btn btn-primary me-2 mb-2\" onClick={handleCopy}>Copy Text</button>\n        <button disabled={text.length===0} className=\"btn btn-primary me-2 mb-2\" onClick={handleExtraSpaces}>Remove extra spaces</button>\n    \n      </div>\n\n\n      <div className=\"container my-3\">\n        <h1> Your Text Summary</h1>\n        {/* \\s+ is a regular expression which targets one or more whitespaces(newline , spaces) */}\n        <b> {text.split(/\\s+/).filter((element)=>{ return element.length!==0}).length } words and {text.length} characters</b>\n        <p>\n       \n          <b>You will take {text.split(\" \").filter((element)=>{ return element.length!==0}).length *0.008 }minutes to read the\n            above text</b>\n          {/* For humans, On average to read a single word takes 0.008 minutes */}\n        </p>\n        <h2>Preview</h2>\n        <p>{text.length > 0 ? text : \"Enter something in the above textbox to preview it here\"}</p>\n\n      </div>\n\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}